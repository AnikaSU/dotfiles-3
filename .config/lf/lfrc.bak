# interpreter for shell commands (needs to be POSIX compatible)
set shell sh
set drawbox
set ratios '1:3:2'
set ifs "\n"
set incsearch
set findlen 0
set icons
set hidden true
set shellopts '-eu'


%{{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 5:0.1"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:3:2"
    else
        lf -remote "send $id set ratios 1:3:2"
    fi
}}

cmd open ${{
    case $(file --mime-type "$f" -b) in
#        text/*) setsid /home/$USER/.config/lf/emc $f;;
        text/*) $$EDITOR $f;;
	audio/mpeg) mpv $f;;
	video/*) setsid mpv $f > /dev/null 2 2>&1 & ;;
	image/*) rifle_sxiv.sh $f;;
        *) for f in $f; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac 
}}

# Renombrar
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd Papelera %{{
    set -f
    printf "$fx\n"
    printf "¿Mandar a la papelera de reciclaje?[s/n]"
    read ans
    [ $ans = "y" ] && 
    }}

# delete current file or selected files (prompting)
cmd Eliminar ${{
    set -f
    printf "$fx\n"
    printf "¿Borrar definitivamente?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd paste &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        rsync -av --ignore-existing --progress $list . \
        | stdbuf -i0 -o0 -e0 tr '\r' '\n' \
        | while read line; do
            lf -remote "send $id echo $line"
        done
    elif [ $mode = 'move' ]; then
        mv -n $list .
    fi
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd kdeconnect &{{
		    id=$(kdeconnect-cli -a --id-only | awk '{print $1}')
		    kdeconnect-cli -d $id --share $f
		    notify-send -a "Kdeconnect" "Enviando archivo"
		}}

# use enter for shell commands
#map <enter> shell

##############
# keys
##############

# Quitar teclas por default

map m

# dedicated keys for file opener actions
map o &mimeopen "$f" & disown
map O $mimeopen --ask "$f" & disown
map P $less "$f"

map md push %mkdir<space>
map mf push %touch<space>

map ~ cd ~
map gh cd ~
map gd cd /mnt/DATA/juan/Drive
map gc cd ~/.config
map gD cd /mnt/DATA/juan
map gl cd -r .
map gL cd -r %f
map gm cd /media
map gr cd /run/media/juan
map g/ cd /

map xx %trash-put $fx
map Xe $"$f" 
map XE !"$f"

map r push :rename<space>
